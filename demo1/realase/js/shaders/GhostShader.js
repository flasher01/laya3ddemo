var GhostShader=function(){function n(){}return n.initShader=function(){var n={u_Bones:[0,0],u_MvpMatrix:[Laya.Sprite3D.MVPMATRIX,Laya.Shader3D.PERIOD_SPRITE],u_Albedo:[CustomMaterialSimple.ALBEDO,Laya.Shader3D.PERIOD_MATERIAL],u_WorldMat:[0,2],u_CameraPos:[0,3]},o=Laya.Shader3D.nameKey.add("GhostShader");Laya.ShaderCompile3D.add(o,"attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nattribute vec2 a_Texcoord0;\nattribute vec3 a_Normal;\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Position;\nvarying vec3 v_Normal;\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\nvoid main(){\nmat4 skinTransform= mat4(0.0);\nskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\nskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\nskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\nskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\nvec4 position= skinTransform * a_Position;\ngl_Position = u_MvpMatrix * position;\nmat3 worldMat=mat3(u_WorldMat * skinTransform);\nv_Position=a_Position;\nv_Normal=worldMat*a_Normal;\nv_Texcoord0= a_Texcoord0;\n}","#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Position;\nvarying vec3 v_Normal;\nuniform sampler2D u_DiffuseTexture;\nuniform vec4 u_Albedo;\nuniform vec3 u_CameraPos;\nvoid main(){\nvec3 viewDir = normalize(u_CameraPos - vec3(v_Position.x,v_Position.y,v_Position.z));\nfloat val=1.0-clamp(dot(v_Normal,viewDir),0.0,1.0);\ngl_FragColor = u_Albedo*val;}",{a_Position:0,a_Normal:3,a_Texcoord0:2,a_BoneWeights:7,a_BoneIndices:6},n)},n}();